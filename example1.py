# -*- coding:utf-8 -*-

# A simple example using the HTTP plugin that shows the retrieval of a
# single page via HTTP.
#
# This script is automatically generated by ngrinder.
#
from net.grinder.script.Grinder import grinder
from net.grinder.script import Test
from java.util import Date
from HTTPClient import NVPair, Cookie, CookieModule
from net.grinder.util import GrinderUtils
from net.grinder.plugin.http import HTTPRequest
from net.grinder.plugin.http import HTTPPluginControl
import time,uuid,random,string
# Uncomment this to use new experimental HTTP client.
# from org.ngrinder.http import HTTPRequest
# from org.ngrinder.http.cookie import Cookie, CookieManager
import json
control = HTTPPluginControl.getConnectionDefaults()
# if you don't want that HTTPRequest follows the redirection, please modify the following option 0.
# control.followRedirects = 1
# if you want to increase the timeout, please modify the following option.
control.timeout = 60000

test1 = Test(1, "cxhscj")
request1 = HTTPRequest()
# Set header datas
headers = [] # Array of NVPair
headers.append(NVPair("Content-Type", "application/json"))
# Set form data
# Set cookie datas
cookies = [] # Array of Cookie

class TestRunner:
    # initlialize a thread
    def __init__(self):
        test1.record(TestRunner.__call__)
        grinder.statistics.delayReports=True
        pass

    def before(self):
        request1.setHeaders(headers)
        for c in cookies: CookieModule.addCookie(c, HTTPPluginControl.getThreadHTTPClientContext())

    # test method
    def __call__(self):
        self.before()
        body_canshu = "./resources/license-body.json.json"
        # f_douhao = open(body_canshu)
        # body_canshu_all = f_douhao.readlines()
        # l_body_canshu=len(body_canshu_all)
        # rowNumber_body_canshu = random.randint(0,l_body_canshu-1)
        # certName=body_canshu_all[rowNumber_body_canshu].split(",")[0].decode('utf-8')
        # certNumber=body_canshu_all[rowNumber_body_canshu].split(",")[1].replace("\n","").replace("\r","")
        # #grinder.logger.info(certNumber)
        # body = {"certName":certName,"certNumber":certNumber}	# String of form data
        body=json.dumps(body)
        #grinder.logger.info(body)
        result = request1.POST("http://127.0.0.1:8080/v1/test/collectInfoQuery", body)
        grinder.logger.info(result.getText().decode('utf-8'))
        if result.getText().find("000000") == -1 :
            grinder.logger.info(result.getText().decode('utf-8'))
            raise
